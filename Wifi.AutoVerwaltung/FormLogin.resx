<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>